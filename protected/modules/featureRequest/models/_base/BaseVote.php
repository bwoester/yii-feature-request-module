<?php

/**
 * This is the model base class for the table "vote".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Vote".
 *
 * Columns in table "vote" available as properties of the model,
 * followed by relations of table "vote" available as properties of the model.
 *
 * @property integer $id
 * @property integer $weight
 * @property integer $abstract_user_id
 * @property integer $feature_request_id
 *
 * @property AbstractUser $abstractUser
 * @property FeatureRequest $featureRequest
 */
abstract class BaseVote extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'vote';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Vote|Votes', $n);
	}

	public static function representingColumn() {
		return 'id';
	}

	public function rules() {
		return array(
			array('weight, abstract_user_id, feature_request_id', 'required'),
			array('weight, abstract_user_id, feature_request_id', 'numerical', 'integerOnly'=>true),
			array('id, weight, abstract_user_id, feature_request_id', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'abstractUser' => array(self::BELONGS_TO, 'AbstractUser', 'abstract_user_id'),
			'featureRequest' => array(self::BELONGS_TO, 'FeatureRequest', 'feature_request_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'weight' => Yii::t('app', 'Weight'),
			'abstract_user_id' => null,
			'feature_request_id' => null,
			'abstractUser' => null,
			'featureRequest' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('weight', $this->weight);
		$criteria->compare('abstract_user_id', $this->abstract_user_id);
		$criteria->compare('feature_request_id', $this->feature_request_id);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}